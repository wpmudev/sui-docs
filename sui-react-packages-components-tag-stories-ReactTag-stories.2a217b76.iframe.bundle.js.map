{"version":3,"file":"sui-react-packages-components-tag-stories-ReactTag-stories.2a217b76.iframe.bundle.js","mappings":";;;;;;;;AAiBA;;;;;;;ACAA;;;;;;;AAQA;;;;;;;AAQA;;;;;;;AAQA;;;;;;;AAQA;;;;;;;AAQA;;;;;;;AAQA;;;;;;;AAQA;;;;;;;ACxDA;;;;;;;AAQA;;;;;;;ACRA;;;;;;;AAQA;;;;;;;ACJA","sources":["webpack://sui-docs/./packages/sui-react/packages/components/tag/stories/tabs/Examples/Size.mdx","webpack://sui-docs/./packages/sui-react/packages/components/tag/stories/tabs/Examples/Colors.mdx","webpack://sui-docs/./packages/sui-react/packages/components/tag/stories/tabs/Examples/States.mdx","webpack://sui-docs/./packages/sui-react/packages/components/tag/stories/tabs/Examples/Design.mdx","webpack://sui-docs/./packages/sui-react/packages/components/tag/stories/tabs/TabExamples.mdx"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-essentials/docs/mdx-react-shim\";\nimport {Section, Preview, Snippet, Code} from '@wpmudev/storybook';\nimport {Tag} from '../../../src';\nimport dedent from 'dedent';\nexport const SmallTagCode = dedent`\nimport React from 'react';\\n\nimport { Tag } from '@wpmudev/sui-react';\\n\nconst Example() => {\n\treturn <Tag isSmall={true}>Tag</Tag>;\n}\\n\nexport default Example;\n`;\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(Section, {\n    title: \"Small\",\n    contained: true,\n    style: {\n      paddingRight: 0,\n      paddingBottom: 0,\n      paddingLeft: 0\n    },\n    children: [_jsx(\"p\", {\n      children: _jsxs(_components.p, {\n        children: [\"Set the \", _jsx(Code, {\n          small: true,\n          children: \"isSmall\"\n        }), \" prop to reduce the tag width\\nand height, fitting with the design context.\"]\n      })\n    }), _jsx(Preview, {\n      wrapper: true,\n      children: _jsx(Tag, {\n        isSmall: true,\n        children: \"Default tag\"\n      })\n    }), _jsx(Snippet, {\n      language: \"js\",\n      children: SmallTagCode\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-essentials/docs/mdx-react-shim\";\nimport {Section, Snippet, Preview, Code} from '@wpmudev/storybook';\nimport {Tag} from '../../../src';\nimport dedent from 'dedent';\nexport const DefaultTagCode = dedent`\nimport React from 'react';\\n\nimport { Tag } from '@wpmudev/sui-react';\\n\nconst Example() => {\n\treturn <Tag>Default tag</Tag>;\n}\\n\nexport default Example;\n`;\nexport const BlueTagCode = dedent`\nimport React from 'react';\\n\nimport { Tag } from '@wpmudev/sui-react';\\n\nconst Example() => {\n\treturn <Tag color=\"blue\">Blue tag</Tag>;\n}\\n\nexport default Example;\n`;\nexport const YellowTagCode = dedent`\nimport React from 'react';\\n\nimport { Tag } from '@wpmudev/sui-react';\\n\nconst Example() => {\n\treturn <Tag color=\"yellow\">Yellow tag</Tag>;\n}\\n\nexport default Example;\n`;\nexport const RedTagCode = dedent`\nimport React from 'react';\\n\nimport { Tag } from '@wpmudev/sui-react';\\n\nconst Example() => {\n\treturn <Tag color=\"red\">Red tag</Tag>;\n}\\n\nexport default Example;\n`;\nexport const GreenTagCode = dedent`\nimport React from 'react';\\n\nimport { Tag } from '@wpmudev/sui-react';\\n\nconst Example() => {\n\treturn <Tag color=\"green\">Green tag</Tag>;\n}\\n\nexport default Example;\n`;\nexport const BlackTagCode = dedent`\nimport React from 'react';\\n\nimport { Tag } from '@wpmudev/sui-react';\\n\nconst Example() => {\n\treturn <Tag color=\"black\">Black tag</Tag>;\n}\\n\nexport default Example;\n`;\nexport const DarkBlueTagCode = dedent`\nimport React from 'react';\\n\nimport { Tag } from '@wpmudev/sui-react';\\n\nconst Example() => {\n\treturn <Tag color=\"dark-blue\">Dark Blue tag</Tag>;\n}\\n\nexport default Example;\n`;\nexport const WhiteTagCode = dedent`\nimport React from 'react';\\n\nimport { Tag } from '@wpmudev/sui-react';\\n\nconst Example() => {\n\treturn <Tag color=\"white\">White tag</Tag>;\n}\\n\nexport default Example;\n`;\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Section, {\n      title: \"Default\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: \"This is the primary color of the tag.\"\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Tag, {\n          children: \"Default tag\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: DefaultTagCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Blue\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsx(_components.p, {\n          children: \"Semantic color variation can be used to distinguish between various\\nstates of tags.\"\n        })\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Tag, {\n          color: \"blue\",\n          children: \"Blue tag\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: BlueTagCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Yellow\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsx(_components.p, {\n          children: \"Semantic color variation can be used to distinguish between various\\nstates of tags.\"\n        })\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Tag, {\n          color: \"yellow\",\n          children: \"Yellow tag\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: YellowTagCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Red\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsx(_components.p, {\n          children: \"Semantic color variation can be used to distinguish between various\\nstates of tags.\"\n        })\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Tag, {\n          color: \"red\",\n          children: \"Red tag\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: RedTagCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Green\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsx(_components.p, {\n          children: \"Semantic color variation can be used to distinguish between various\\nstates of tags.\"\n        })\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Tag, {\n          color: \"green\",\n          children: \"Green tag\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: GreenTagCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Black\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: \"To indicate pro features, a structured black tag is used.\"\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Tag, {\n          color: \"black\",\n          children: \"Black tag\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: BlackTagCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Dark Blue\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsx(_components.p, {\n          children: \"Structured blue tags are used to indicate beta, coming soon, new, free,\\nand hosting. The typography for Free and Coming Soon will be in\\nuppercase.\"\n        })\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Tag, {\n          color: \"dark-blue\",\n          children: \"Dark Blue tag\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: DarkBlueTagCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"White\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsx(_components.p, {\n          children: \"Use the tag in some scenarios, like placing it in any element with a\\ndark background.\"\n        })\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Tag, {\n          color: \"white\",\n          children: \"White tag\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: WhiteTagCode\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-essentials/docs/mdx-react-shim\";\nimport {Section, Preview, Snippet, Code} from '@wpmudev/storybook';\nimport {Tag} from '../../../src';\nimport dedent from 'dedent';\nexport const DisabledTagCode = dedent`\nimport React from 'react';\\n\nimport { Tag } from '@wpmudev/sui-react';\\n\nconst Example() => {\n\treturn <Tag isDisabled={true}>Disabled tag</Tag>;\n}\\n\nexport default Example;\n`;\nexport const UppercaseTagCode = dedent`\nimport React from 'react';\\n\nimport { Tag } from '@wpmudev/sui-react';\\n\nconst Example() => {\n\treturn <Tag isUppercase={true}>Uppercase tag</Tag>;\n}\\n\nexport default Example;\n`;\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Section, {\n      title: \"Disabled\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsxs(_components.p, {\n          children: [\"Set the \", _jsx(Code, {\n            small: true,\n            children: \"isDisabled\"\n          }), \" prop to disable a tag that\\nis not usable.\"]\n        })\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Tag, {\n          isDisabled: true,\n          children: \"Disabled tag\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: DisabledTagCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Uppercase\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsxs(_components.p, {\n          children: [\"Set the \", _jsx(Code, {\n            small: true,\n            children: \"isUppercase\"\n          }), \" prop to make text\\nuppercase.\"]\n        })\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Tag, {\n          isUppercase: true,\n          children: \"Uppercase tag\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: UppercaseTagCode\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-essentials/docs/mdx-react-shim\";\nimport {Section, Preview, Snippet, Code} from '@wpmudev/storybook';\nimport {Tag} from '../../../src';\nimport dedent from 'dedent';\nexport const MutilineTagCode = dedent`\nimport React from 'react';\\n\nimport { Tag } from '@wpmudev/sui-react';\\n\nconst Example() => {\n\treturn <Tag design=\"multiline\">This is a label.</Tag>;\n}\\n\nexport default Example;\n`;\nexport const TruncatedTagCode = dedent`\nimport React from 'react';\\n\nimport { Tag } from '@wpmudev/sui-react';\\n\nconst Example() => {\n\treturn <Tag design=\"truncated\">This is a label.</Tag>;\n}\\n\nexport default Example;\n`;\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Section, {\n      title: \"Multiline\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsx(_components.p, {\n          children: \"This mean height of the tag will adjust depending on the amount of text\\nand its width.\"\n        })\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Tag, {\n          design: \"multiline\",\n          children: \"This is a label.\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: MutilineTagCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Truncated\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsx(_components.p, {\n          children: \"Use this when to truncate text inside tag instead using multi-line text.\"\n        })\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Tag, {\n          design: \"truncated\",\n          children: \"This is a label.\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: TruncatedTagCode\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-essentials/docs/mdx-react-shim\";\nimport {Section, Switcher, Preview, Snippet} from '@wpmudev/storybook';\nimport {Tag} from '../../src';\nimport dedent from 'dedent';\nimport Size from './Examples/Size.mdx';\nimport Colors from './Examples/Colors.mdx';\nimport States from './Examples/States.mdx';\nimport Design from './Examples/Design.mdx';\nexport const sampleCode = dedent`\nimport React from 'react';\\n\nimport { Tag } from '@wpmudev/sui-react';\\n\nconst Example() => {\n\treturn <Tag>Tag default</Tag>;\n}\\n\nexport default Example;\n`;\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Section, {\n      contained: true,\n      style: {\n        paddingTop: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsx(_components.p, {\n          children: \"Below is the default form of a tag, used for most cases; it is not\\nimpactful enough to represent the primary action in a container but\\nnecessary in some scenarios.\"\n        })\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Tag, {\n          children: \"Default tag\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: sampleCode\n      })]\n    }), \"\\n\", _jsx(Section, {\n      style: {\n        paddingTop: 0\n      },\n      children: _jsxs(Switcher, {\n        children: [_jsx(\"div\", {\n          label: \"Colors\",\n          value: \"colors\",\n          children: _jsx(Colors, {})\n        }), _jsx(\"div\", {\n          label: \"Size\",\n          value: \"size\",\n          children: _jsx(Size, {})\n        }), _jsx(\"div\", {\n          label: \"States\",\n          value: \"states\",\n          children: _jsx(States, {})\n        }), _jsx(\"div\", {\n          label: \"Design\",\n          value: \"design\",\n          children: _jsx(Design, {})\n        })]\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}