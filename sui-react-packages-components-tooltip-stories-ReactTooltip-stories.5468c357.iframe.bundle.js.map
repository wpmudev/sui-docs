{"version":3,"file":"sui-react-packages-components-tooltip-stories-ReactTooltip-stories.5468c357.iframe.bundle.js","mappings":";;;;;;;;AAiBA;;;;;;;AAQA","sources":["webpack://sui-docs/./packages/sui-react/packages/components/tooltip/stories/tabs/TabExamples.mdx"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-essentials/docs/mdx-react-shim\";\nimport {Section, Switcher, Preview, Snippet} from '@wpmudev/storybook';\nimport {Tooltip} from '../../src';\nimport dedent from 'dedent';\nexport const sampleCode = dedent`\nimport React from 'react';\\n\nimport { Tooltip } from '@wpmudev/sui-react';\\n\nconst Example() => {\n\treturn <Tooltip label=\"Button\" appearance=\"primary\" color=\"black\">Button default</Tooltip>;\n}\\n\nexport default Example;\n`;\nexport const overflowSampleCode = dedent`\nimport React from 'react';\\n\nimport { Tooltip } from '@wpmudev/sui-react';\\n\nconst Example() => {\n\treturn <Tooltip label=\"Button\" appearance=\"primary\" color=\"black\" customWidth={200}>When the content is long, it will be wrapped.</Tooltip>;\n}\\n\nexport default Example;\n`;\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Section, {\n      contained: true,\n      style: {\n        paddingTop: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsx(_components.p, {\n          children: \"Below is the default form of a button, used for most cases; it is not\\nimpactful enough to represent the primary action in a container but\\nnecessary in some scenarios.\"\n        })\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(\"div\", {\n          style: {\n            padding: '40px'\n          },\n          children: _jsx(Tooltip, {\n            label: \"Tooltip\",\n            appearance: \"primary\",\n            position: \"top\",\n            color: \"black\",\n            children: _jsx(_components.p, {\n              children: \"Default tooltip\"\n            })\n          })\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: sampleCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Overflow\",\n      contained: true,\n      style: {\n        paddingTop: 0\n      },\n      children: [_jsx(\"p\", {\n        children: \"If the tooltip content exceeds the maximum width, it will be wrapped.\"\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(\"div\", {\n          style: {\n            padding: '40px'\n          },\n          children: _jsx(Tooltip, {\n            label: \"Overflow\",\n            appearance: \"primary\",\n            position: \"right\",\n            color: \"black\",\n            customWidth: 200,\n            children: _jsx(_components.p, {\n              children: \"When the content is long, it will be wrapped.\"\n            })\n          })\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: overflowSampleCode\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}