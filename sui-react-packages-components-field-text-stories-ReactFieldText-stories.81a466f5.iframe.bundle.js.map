{"version":3,"file":"sui-react-packages-components-field-text-stories-ReactFieldText-stories.81a466f5.iframe.bundle.js","mappings":";;;AAYA;;AAGA;;AAGA;;AAGA;;AAGA;;ACZA;;;;;;;;;ACOA;;;;;;;;;AAUA;;ACdA","sources":["webpack://sui-docs/./packages/sui-react/packages/components/field-text/stories/tabs/Examples/States.mdx","webpack://sui-docs/./packages/sui-react/packages/components/field-text/stories/tabs/Examples/Size.mdx","webpack://sui-docs/./packages/sui-react/packages/components/field-text/stories/tabs/Examples/Icon.mdx","webpack://sui-docs/./packages/sui-react/packages/components/field-text/stories/tabs/TabExamples.mdx"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-essentials/docs/mdx-react-shim\";\nimport {Section, Preview, Snippet, Code} from \"@wpmudev/storybook\";\nimport {TextField} from \"../../../src\";\nimport dedent from \"dedent\";\nexport const DisabledTextField = dedent`\n    <TextField isDisabled={true} id=\"text-field-id-1\" placeholder=\"Placeholder\" label=\"Label\" helper=\"Help text\" />\n`;\nexport const DefaultValueTextFieldCode = dedent`\n    <TextField defaultValue=\"Default Value\" id=\"text-field-id-1\" placeholder=\"Placeholder\" label=\"Label\" helper=\"Help text\" />\n`;\nexport const ReadOnlyTextFieldCode = dedent`\n    <TextField readOnly={true} defaultValue=\"Read Only Field\" id=\"text-field-id-1\" placeholder=\"Placeholder\" label=\"Label\" helper=\"Help text\" />\n`;\nexport const ErrorTextFieldCode = dedent`\n\t<TextField isError={true} errorMessage=\"Error Message\" id=\"text-field-id-1\" placeholder=\"Placeholder\" label=\"Label\" helper=\"Help text\" />\n`;\nexport const multilineCode = dedent`\n    <TextField isMultiLine={true} id=\"text-field-id-1\" placeholder=\"Multiline Text Field\" label=\"Multiline\" helper=\"Help text\" />\n`;\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Section, {\n      title: \"Disabled\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(Preview, {\n        wrapper: true,\n        children: _jsx(TextField, {\n          isDisabled: true,\n          id: \"text-field-id-1\",\n          placeholder: \"Placeholder\",\n          label: \"Label\",\n          helper: \"Help text\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: DisabledTextField\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Default Value\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(Preview, {\n        wrapper: true,\n        children: _jsx(TextField, {\n          defaultValue: \"Default Value\",\n          id: \"text-field-id-1\",\n          placeholder: \"Placeholder\",\n          label: \"Label\",\n          helper: \"Help text\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: DefaultValueTextFieldCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Read Only\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(Preview, {\n        wrapper: true,\n        children: _jsx(TextField, {\n          readOnly: true,\n          defaultValue: \"Read Only Field\",\n          id: \"text-field-id-1\",\n          placeholder: \"Placeholder\",\n          label: \"Label\",\n          helper: \"Help text\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: ReadOnlyTextFieldCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Error\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(Preview, {\n        wrapper: true,\n        children: _jsx(TextField, {\n          isError: true,\n          errorMessage: \"Error Message\",\n          id: \"text-field-id-1\",\n          placeholder: \"Placeholder\",\n          label: \"Label\",\n          helper: \"Help text\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: ErrorTextFieldCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Multiline\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(Preview, {\n        wrapper: true,\n        children: _jsx(TextField, {\n          isMultiLine: true,\n          id: \"text-field-id-1\",\n          placeholder: \"Multiline Text Field\",\n          label: \"Multiline\",\n          helper: \"Help text\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: multilineCode\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-essentials/docs/mdx-react-shim\";\nimport {Section, Preview, Snippet, Code} from \"@wpmudev/storybook\";\nimport {TextField} from \"../../../src\";\nimport dedent from \"dedent\";\nexport const SmallTextFieldCode = dedent`\n    <TextField isSmall={true} id=\"text-field-id-1\" placeholder=\"Small Field\" label=\"Small Field\" helper=\"Help text\" />\n`;\nfunction _createMdxContent(props) {\n  return _jsxs(Section, {\n    title: \"Small\",\n    contained: true,\n    style: {\n      paddingRight: 0,\n      paddingBottom: 0,\n      paddingLeft: 0\n    },\n    children: [_jsx(Preview, {\n      wrapper: true,\n      children: _jsx(TextField, {\n        isSmall: true,\n        id: \"text-field-id-1\",\n        placeholder: \"Small Field\",\n        label: \"Small Field\",\n        helper: \"Help text\"\n      })\n    }), _jsx(Snippet, {\n      language: \"js\",\n      children: SmallTextFieldCode\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-essentials/docs/mdx-react-shim\";\nimport {Section, Preview, Snippet, Code} from \"@wpmudev/storybook\";\nimport {TextField} from \"../../../src\";\nimport dedent from \"dedent\";\nexport const LeadInputCode = dedent`\n   <TextField\n        label=\"label\"\n        helper=\"Icon to the left\"\n        icon=\"user\"\n        iconPosition=\"start\"\n        id=\"text-field-id-1\"\n        placeholder=\"Placeholder\"\n    />\n`;\nexport const TrailInputCode = dedent`\n    <TextField\n        label=\"label\"\n        helper=\"Icon to the right\"\n        icon=\"user\"\n        iconPosition=\"end\"\n        id=\"text-field-id-1\"\n        placeholder=\"Placeholder\"\n    />\n`;\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Section, {\n      title: \"Icon to the left\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(Preview, {\n        wrapper: true,\n        children: _jsx(TextField, {\n          label: \"Label\",\n          helper: \"Icon to the left\",\n          icon: \"user\",\n          iconPosition: \"start\",\n          id: \"text-field-id-1\",\n          placeholder: \"Placeholder\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: LeadInputCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Icon to the right\",\n      contained: true,\n      style: {\n        paddingRight: 0,\n        paddingBottom: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(Preview, {\n        wrapper: true,\n        children: _jsx(TextField, {\n          label: \"Label\",\n          helper: \"Icon to the right\",\n          icon: \"user\",\n          iconPosition: \"end\",\n          id: \"text-field-id-1\",\n          placeholder: \"Placeholder\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: TrailInputCode\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-essentials/docs/mdx-react-shim\";\nimport {Section, Switcher, Preview, Snippet, Code} from \"@wpmudev/storybook\";\nimport {TextField} from \"../../src\";\nimport dedent from \"dedent\";\nimport States from \"./Examples/States.mdx\";\nimport Size from \"./Examples/Size.mdx\";\nimport Icon from \"./Examples/Icon.mdx\";\nexport const sampleCode = dedent`\n    <TextField id=\"form-field-1\" label=\"Label\" helper=\"Help text\" />\n`;\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Section, {\n      contained: true,\n      style: {\n        paddingTop: 0\n      },\n      children: [_jsx(\"p\", {\n        children: \"Below is the default TextField component, used for most cases.\"\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(TextField, {\n          id: \"form-field-1\",\n          label: \"Label\",\n          helper: \"Help text\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: sampleCode\n      })]\n    }), \"\\n\", _jsx(Section, {\n      style: {\n        paddingTop: 0\n      },\n      children: _jsxs(Switcher, {\n        children: [_jsx(\"div\", {\n          label: \"States\",\n          value: \"states\",\n          children: _jsx(States, {})\n        }), _jsx(\"div\", {\n          label: \"Size\",\n          value: \"size\",\n          children: _jsx(Size, {})\n        }), _jsx(\"div\", {\n          label: \"Icons\",\n          value: \"icons\",\n          children: _jsx(Icon, {})\n        })]\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}