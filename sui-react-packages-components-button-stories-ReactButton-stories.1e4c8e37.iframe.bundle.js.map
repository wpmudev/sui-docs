{"version":3,"file":"sui-react-packages-components-button-stories-ReactButton-stories.1e4c8e37.iframe.bundle.js","mappings":";;;;;;AAcA;;;;;AAMA;;;;;AAMA;;;;;;;ACTA;;;;;;;AAQA;;;;;;;AAQA;;;;;;;AChBA;;;;;;;AAQA;;;;;;;AAQA;;;;;;;AAQA;;;;;;;AAQA;;;;;;;AChCA;;;;;;;AAQA;;;;;;;ACRA;;;;;;;ACAA;;;;;;;AAQA;;;;;;;ACFA","sources":["webpack://sui-docs/./packages/sui-react/packages/components/button/stories/tabs/Examples/Variants.mdx","webpack://sui-docs/./packages/sui-react/packages/components/button/stories/tabs/Examples/Appearance.mdx","webpack://sui-docs/./packages/sui-react/packages/components/button/stories/tabs/Examples/Colors.mdx","webpack://sui-docs/./packages/sui-react/packages/components/button/stories/tabs/Examples/States.mdx","webpack://sui-docs/./packages/sui-react/packages/components/button/stories/tabs/Examples/Size.mdx","webpack://sui-docs/./packages/sui-react/packages/components/button/stories/tabs/Examples/Icon.mdx","webpack://sui-docs/./packages/sui-react/packages/components/button/stories/tabs/TabExamples.mdx"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-essentials/docs/mdx-react-shim\";\nimport {Section, Snippet, Code} from '@wpmudev/storybook';\nimport dedent from 'dedent';\nexport const StandardButtonCode = dedent`\n// from named entry point (to ensure minimum code is brought in)\nimport { Button } from '@wpmudev/react-button/src/variants/button-standard';\\n\n// from main entry point\nimport { Button } from '@wpmudev/sui-react';\n`;\nexport const LoadingButtonCode = dedent`\n// from named entry point (to ensure minimum code is brought in)\nimport { LoadingButton } from '@wpmudev/react-button/src/variants/button-loading';\\n\n// from main entry point\nimport { LoadingButton } from '@wpmudev/sui-react';\n`;\nexport const ToggleButtonCode = dedent`\n// from named entry point (to ensure minimum code is brought in)\nimport { ToggleButton } from '@wpmudev/react-button/src/variants/button-toggle';\\n\n// from main entry point\nimport { ToggleButton } from '@wpmudev/sui-react';\n`;\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Section, {\n      title: \"Button (standard button)\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsx(_components.p, {\n          children: \"The most used button component. This button comes in different colors\\nand styles and supports the existing dark mode solution.\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: StandardButtonCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Loading button\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsxs(_components.p, {\n          children: [\"A small wrapper around the \", _jsx(Code, {\n            small: true,\n            children: \"Button\"\n          }), \" that allows\\nyou to show a spinner on the button when you set an\", ' ', \"\\n\", _jsx(Code, {\n            small: true,\n            children: \"isLoading\"\n          }), \" prop to true.\"]\n        })\n      }), _jsx(\"p\", {\n        children: _jsxs(_components.p, {\n          children: [_jsx(Code, {\n            small: true,\n            children: \"LoadingButton\"\n          }), \" applies a spinner based on the\\nappearance props.\"]\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: LoadingButtonCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Toggle button\",\n      contained: true,\n      style: {\n        paddingRight: 0,\n        paddingBottom: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsx(_components.p, {\n          children: \"This variation unlocks the active state and allows new props to enable\\nor disable the new button state and other ARIA attributes required for\\nits proper functionality.\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: ToggleButtonCode\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-essentials/docs/mdx-react-shim\";\nimport {Section, Preview, Snippet, Code} from '@wpmudev/storybook';\nimport {Button} from '../../../src';\nimport dedent from 'dedent';\nexport const PrimaryButtonCode = dedent`\nimport React from 'react';\\n\nimport { Button } from '@wpmudev/sui-react';\\n\nconst Example() => {\n\treturn <Button theme=\"primary\">Primary button</Button>;\n}\\n\nexport default Example;\n`;\nexport const SecondaryButtonCode = dedent`\nimport React from 'react';\\n\nimport { Button } from '@wpmudev/sui-react';\\n\nconst Example() => {\n\treturn <Button theme=\"secondary\">Secondary button</Button>;\n}\\n\nexport default Example;\n`;\nexport const TertiaryButtonCode = dedent`\nimport React from 'react';\\n\nimport { Button } from '@wpmudev/sui-react';\\n\nconst Example() => {\n\treturn <Button theme=\"tertiary\">Tertiary button</Button>;\n}\\n\nexport default Example;\n`;\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Section, {\n      title: \"Primary\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsxs(_components.p, {\n          children: [\"Use \", _jsx(Code, {\n            small: true,\n            children: \"primary\"\n          }), \" button to call attention to\\naction. Combined with \", _jsx(Code, {\n            small: true,\n            children: \"blue\"\n          }), \" color prop\\nhighlights the strongest call to action on a page.\"]\n        })\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Button, {\n          theme: \"primary\",\n          children: \"Primary button\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: PrimaryButtonCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Secondary\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsx(_components.p, {\n          children: \"A subtle outlined button that handles secondary actions, such as\\n\\\"Cancel.\\\"\"\n        })\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Button, {\n          theme: \"secondary\",\n          children: \"Secondary button\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: SecondaryButtonCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Tertiary\",\n      contained: true,\n      style: {\n        paddingRight: 0,\n        paddingBottom: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsx(_components.p, {\n          children: \"Link style button commonly used as navigation menu or in special cases.\"\n        })\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Button, {\n          theme: \"tertiary\",\n          children: \"Tertiary button\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: TertiaryButtonCode\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-essentials/docs/mdx-react-shim\";\nimport {Section, Snippet, Preview, Code} from '@wpmudev/storybook';\nimport {Button} from '../../../src';\nimport dedent from 'dedent';\nexport const BlueButtonCode = dedent`\nimport React from 'react';\\n\nimport { Button } from '@wpmudev/sui-react';\\n\nconst Example() => {\n\treturn <Button color=\"blue\">Blue button</Button>;\n}\\n\nexport default Example;\n`;\nexport const BlackButtonCode = dedent`\nimport React from 'react';\\n\nimport { Button } from '@wpmudev/sui-react';\\n\nconst Example() => {\n\treturn <Button color=\"black\">Black button</Button>;\n}\\n\nexport default Example;\n`;\nexport const RedButtonCode = dedent`\nimport React from 'react';\\n\nimport { Button } from '@wpmudev/sui-react';\\n\nconst Example() => {\n\treturn <Button color=\"red\">Red button</Button>;\n}\\n\nexport default Example;\n`;\nexport const NavyButtonCode = dedent`\nimport React from 'react';\\n\nimport { Button } from '@wpmudev/sui-react';\\n\nconst Example() => {\n\treturn <Button color=\"navy\">Navy button</Button>;\n}\\n\nexport default Example;\n`;\nexport const WhiteButtonCode = dedent`\nimport React from 'react';\\n\nimport { Button } from '@wpmudev/sui-react';\\n\nconst Example() => {\n\treturn <Button color=\"white\">White button</Button>;\n}\\n\nexport default Example;\n`;\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Section, {\n      title: \"Blue\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsx(_components.p, {\n          children: \"This is the primary color when calling the strongest attention to\\naction.\"\n        })\n      }), _jsxs(Preview, {\n        wrapper: true,\n        children: [_jsx(Button, {\n          color: \"blue\",\n          theme: \"primary\",\n          children: _jsx(_components.p, {\n            children: \"Blue button\"\n          })\n        }), _jsx(Button, {\n          color: \"blue\",\n          theme: \"secondary\",\n          children: _jsx(_components.p, {\n            children: \"Blue button\"\n          })\n        }), _jsx(Button, {\n          color: \"blue\",\n          theme: \"tertiary\",\n          children: _jsx(_components.p, {\n            children: \"Blue button\"\n          })\n        })]\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: BlueButtonCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Black\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsx(_components.p, {\n          children: \"Another color to highlight attention but with medium or lower emphasis,\\ndepending on its appearance.\"\n        })\n      }), _jsxs(Preview, {\n        wrapper: true,\n        children: [_jsx(Button, {\n          color: \"black\",\n          theme: \"primary\",\n          children: _jsx(_components.p, {\n            children: \"Black button\"\n          })\n        }), _jsx(Button, {\n          color: \"black\",\n          theme: \"secondary\",\n          children: _jsx(_components.p, {\n            children: \"Black button\"\n          })\n        }), _jsx(Button, {\n          color: \"black\",\n          theme: \"tertiary\",\n          children: _jsx(_components.p, {\n            children: \"Black button\"\n          })\n        })]\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: BlackButtonCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Red\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsx(_components.p, {\n          children: \"A danger button; mostly appears as final confirmation for destructive\\nactions such as deleting. There are found primarily on confirmation\\nmodals.\"\n        })\n      }), _jsxs(Preview, {\n        wrapper: true,\n        children: [_jsx(Button, {\n          color: \"red\",\n          theme: \"primary\",\n          children: _jsx(_components.p, {\n            children: \"Red button\"\n          })\n        }), _jsx(Button, {\n          color: \"red\",\n          theme: \"secondary\",\n          children: _jsx(_components.p, {\n            children: \"Red button\"\n          })\n        }), _jsx(Button, {\n          color: \"red\",\n          theme: \"tertiary\",\n          children: _jsx(_components.p, {\n            children: \"Red button\"\n          })\n        })]\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: RedButtonCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Navy\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: \"\\\"The Hub\\\" color button.\"\n      }), _jsxs(Preview, {\n        wrapper: true,\n        children: [_jsx(Button, {\n          color: \"navy\",\n          theme: \"primary\",\n          children: _jsx(_components.p, {\n            children: \"Navy button\"\n          })\n        }), _jsx(Button, {\n          color: \"navy\",\n          theme: \"secondary\",\n          children: _jsx(_components.p, {\n            children: \"Navy button\"\n          })\n        }), _jsx(Button, {\n          color: \"navy\",\n          theme: \"tertiary\",\n          children: _jsx(_components.p, {\n            children: \"Navy button\"\n          })\n        })]\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: NavyButtonCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"White\",\n      contained: true,\n      style: {\n        paddingRight: 0,\n        paddingBottom: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsx(_components.p, {\n          children: \"Use the button in some scenarios, like placing it in front of a modal\\nmask or any element with a dark background.\"\n        })\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsxs(\"div\", {\n          style: {\n            padding: 30,\n            borderRadius: 4,\n            background: '#333'\n          },\n          children: [_jsx(Button, {\n            color: \"white\",\n            theme: \"primary\",\n            children: _jsx(_components.p, {\n              children: \"White button\"\n            })\n          }), _jsx(Button, {\n            color: \"white\",\n            theme: \"secondary\",\n            children: _jsx(_components.p, {\n              children: \"White button\"\n            })\n          }), _jsx(Button, {\n            color: \"white\",\n            theme: \"tertiary\",\n            children: _jsx(_components.p, {\n              children: \"White button\"\n            })\n          })]\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: WhiteButtonCode\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-essentials/docs/mdx-react-shim\";\nimport {Section, Preview, Snippet, Code} from '@wpmudev/storybook';\nimport {Button, LoadingButton} from '../../../src';\nimport dedent from 'dedent';\nexport const DisabledButtonCode = dedent`\nimport React from 'react';\\n\nimport { Button } from '@wpmudev/sui-react';\\n\nconst Example() => {\n\treturn <Button disabled={true}>Disabled button</Button>;\n}\\n\nexport default Example;\n`;\nexport const LoadingButtonCode = dedent`\nimport React from 'react';\\n\nimport { LoadingButton } from '@wpmudev/sui-react';\\n\nconst Example() => {\n\treturn <LoadingButton isLoading>Loading button</Button>;\n}\\n\nexport default Example;\n`;\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Section, {\n      title: \"Disabled\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsxs(_components.p, {\n          children: [\"Set the \", _jsx(Code, {\n            small: true,\n            children: \"isDisabled\"\n          }), \" prop to disable a button\\nthat is not usable.\"]\n        })\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Button, {\n          disabled: true,\n          children: \"Disabled button\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: DisabledButtonCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Loading\",\n      contained: true,\n      style: {\n        paddingRight: 0,\n        paddingBottom: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsxs(_components.p, {\n          children: [\"Set the \", _jsx(Code, {\n            small: true,\n            children: \"isLoading\"\n          }), \" prop to indicate the button\\nis loading. The button text hides, and a spinner shows in its place.\"]\n        })\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(LoadingButton, {\n          isLoading: true,\n          children: \"Loading button\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: LoadingButtonCode\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-essentials/docs/mdx-react-shim\";\nimport {Section, Preview, Snippet, Code} from '@wpmudev/storybook';\nimport {Button} from '../../../src';\nimport dedent from 'dedent';\nexport const SmallButtonCode = dedent`\nimport React from 'react';\\n\nimport { Button } from '@wpmudev/sui-react';\\n\nconst Example() => {\n\treturn <Button size=\"sm\">Button</Button>;\n}\\n\nexport default Example;\n`;\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(Section, {\n    title: \"Small\",\n    contained: true,\n    style: {\n      paddingRight: 0,\n      paddingBottom: 0,\n      paddingLeft: 0\n    },\n    children: [_jsx(\"p\", {\n      children: _jsxs(_components.p, {\n        children: [\"Set the \", _jsx(Code, {\n          small: true,\n          children: \"isSmall\"\n        }), \" prop to reduce the button\\nwidth and height, fitting with the design context.\"]\n      })\n    }), _jsx(Preview, {\n      wrapper: true,\n      children: _jsx(Button, {\n        size: \"sm\",\n        children: \"Button\"\n      })\n    }), _jsx(Snippet, {\n      language: \"js\",\n      children: SmallButtonCode\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-essentials/docs/mdx-react-shim\";\nimport {Section, Preview, Snippet, Code} from '@wpmudev/storybook';\nimport {Button} from '../../../src';\nimport dedent from 'dedent';\nexport const LeadButtonCode = dedent`\nimport React from 'react';\\n\nimport { Button } from '@wpmudev/sui-react';\\n\nconst Example() => {\n\treturn <Button icon=\"logo\" iconPosition=\"start\">Icon before</Button>;\n}\\n\nexport default Example;\n`;\nexport const TrailButtonCode = dedent`\nimport React from 'react';\\n\nimport { Button } from '@wpmudev/sui-react';\\n\nconst Example() => {\n\treturn <Button icon=\"logo\" iconPosition=\"end\">Icon after</Button>;\n}\\n\nexport default Example;\n`;\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Section, {\n      title: \"Leading\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: \"Display an icon before the text.\"\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Button, {\n          icon: \"logo\",\n          children: \"Icon before\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: LeadButtonCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Trailing\",\n      contained: true,\n      style: {\n        paddingRight: 0,\n        paddingBottom: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: \"Display an icon after the text.\"\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Button, {\n          icon: \"logo\",\n          iconPosition: \"end\",\n          children: \"Icon after\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: TrailButtonCode\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-essentials/docs/mdx-react-shim\";\nimport {Section, Switcher, Preview, Snippet} from \"@wpmudev/storybook\";\nimport {Button} from \"../../src\";\nimport dedent from \"dedent\";\nimport Variants from \"./Examples/Variants.mdx\";\nimport Appearance from \"./Examples/Appearance.mdx\";\nimport Colors from \"./Examples/Colors.mdx\";\nimport States from \"./Examples/States.mdx\";\nimport Size from \"./Examples/Size.mdx\";\nimport Icon from \"./Examples/Icon.mdx\";\nexport const sampleCode = dedent`\nimport React from 'react';\\n\nimport { Button } from '@wpmudev/sui-react';\\n\nconst Example() => {\n\treturn <Button>Button default</Button>;\n}\\n\nexport default Example;\n`;\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Section, {\n      contained: true,\n      style: {\n        paddingTop: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsx(_components.p, {\n          children: \"Below is the default form of a button, used for most cases; it is not\\nimpactful enough to represent the primary action in a container but\\nnecessary in some scenarios.\"\n        })\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Button, {\n          children: \"Default button\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: sampleCode\n      })]\n    }), \"\\n\", _jsx(Section, {\n      style: {\n        paddingTop: 0\n      },\n      children: _jsxs(Switcher, {\n        children: [_jsx(\"div\", {\n          label: \"Variants\",\n          value: \"variants\",\n          children: _jsx(Variants, {})\n        }), _jsx(\"div\", {\n          label: \"Appearance\",\n          value: \"appearance\",\n          children: _jsx(Appearance, {})\n        }), _jsx(\"div\", {\n          label: \"Colors\",\n          value: \"colors\",\n          children: _jsx(Colors, {})\n        }), _jsx(\"div\", {\n          label: \"States\",\n          value: \"states\",\n          children: _jsx(States, {})\n        }), _jsx(\"div\", {\n          label: \"Size\",\n          value: \"size\",\n          children: _jsx(Size, {})\n        }), _jsx(\"div\", {\n          label: \"Button with Icon\",\n          value: \"icon\",\n          children: _jsx(Icon, {})\n        })]\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}